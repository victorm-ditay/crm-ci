# .github/workflows/test.yml

name: Test con docker run de Odoo CE

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
          POSTGRES_DB: odoo
        ports:
          - 5432:5432

    steps:
      - name: Checkout código
        uses: actions/checkout@v4
      
      # - name: Instalar y ejecutar manifestoo
      #   id: manifestoo
      #   run: |
      #     pip install --user manifestoo-core
      #     ~/.local/bin/manifestoo -d repos list --installable > modules_list.txt
      #     MOD_LIST=$(cat modules_list.txt | tr '\n' ',' | sed 's/,$//')
      #     echo "modules=$MOD_LIST" >> $GITHUB_OUTPUT

      - name: Detectar módulos instalables en raíz
        id: detect-modules
        run: |
          MOD_LIST=$(find . -maxdepth 2 -name __manifest__.py \
            -exec grep -l '"installable"\s*:\s*(true|True)' {} \; \
            | sed 's|/__manifest__.py||' | xargs -n1 basename \
            | tr '\n' ',' | sed 's/,$//')
          echo "modules=$MOD_LIST" >> $GITHUB_OUTPUT

      - name: Ejecutar tests de Odoo en contenedor
        run: |
          docker run --rm \
            --network=host \
            -v ${{ github.workspace }}/repos:/mnt/repos \
            ghcr.io/victorm-ditay/odoo-ce:18.0 \
            odoo \
              --addons-path=/usr/lib/python3/dist-packages/odoo/addons,/mnt/repos \
              --db_host=localhost --db_user=odoo --db_password=odoo \
              --test-enable --stop-after-init \
              --modules=if: ${{ steps.detect-modules.outputs.modules != '' }}
              
      - name: Generar cobertura de tests del repositorio
        run: |
          pip install coverage
          coverage run -m unittest discover -s repos
          coverage xml

      - name: Subir cobertura a Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
